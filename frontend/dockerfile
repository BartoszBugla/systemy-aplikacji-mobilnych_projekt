## Dockerfile
################################
## BUILD ENVIRONMENT ###########
################################

FROM node:23-slim As build

# Set the working directory inside the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json into the container
COPY package*.json package-lock.json ./

# Install dependencies using npm
RUN npm i

# Copy the project files into the working directory
COPY ./ ./

# Build the React app for production
RUN npm run build


## Dockerfile
################################
## GET CERTIFICATES ############
################################


FROM ubuntu:25.04 as certificates

WORKDIR /usr/src/app

# Install OpenSSL
RUN apt-get update && apt-get install -y openssl
RUN openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -sha256 -days 365 \
    -subj "/C=GB/ST=London/L=London/O=Alros/OU=IT Department/CN=localhost"


## Dockerfile
################################
## PRODUCTION ##################
################################


FROM nginx:stable-alpine as production

# copy nginx configuration in side conf.d folder
COPY --from=build /usr/src/app/nginx /etc/nginx/conf.d

# Copy the build output from the dist folder into the Nginx html directory
COPY --from=build /usr/src/app/dist /usr/share/nginx/html

# Copy the build output from the dist folder into the Nginx html directory
COPY --from=certificates /usr/src/app/cert.pem /usr/share/nginx/ssl
COPY --from=certificates /usr/src/app/key.pem /usr/share/nginx/ssl

RUN ls /usr/share/nginx/ssl


# Expose port 80 to allow access to the app
EXPOSE 80

# Run Nginx in the foreground
ENTRYPOINT ["nginx", "-g", "daemon off;"] 